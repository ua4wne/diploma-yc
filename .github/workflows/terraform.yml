name: Terraform Apply with Yandex S3 Backend

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/src/k8s/**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform/src/k8s

    env:
      TF_VAR_token: ${{ secrets.YC_TOKEN }}
      TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
      TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
      TF_VAR_zone: ${{ secrets.YC_ZONE }}
      TF_VAR_get_hosts: "true"
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init (with Yandex S3)
        run: |
          terraform init \
            -backend-config="bucket=s3-tf-backend" \
            -backend-config="key=diploma/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="endpoint=https://storage.yandexcloud.net" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_requesting_account_id=true" \
            -backend-config="skip_s3_checksum=true"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          set +e
          terraform plan -out=tfplan -detailed-exitcode
          code=$?
          echo "Exit code: $code"
          echo "$code" > exit_code.txt
          exit $code  # <== здесь можно вернуть ошибку, чтобы лог показал её причину

      - name: Check Plan Exit Code
        run: |
          code=$(cat exit_code.txt)
          echo "Terraform plan exit code: $code"
          if [ "$code" = "0" ]; then
            echo "✅ No changes to apply."
            exit 0
          elif [ "$code" = "1" ]; then
            echo "❌ Terraform plan failed."
            exit 1
          elif [ "$code" = "2" ]; then
            echo "✅ Changes detected, continuing..."
            exit 0
          else
            echo "❌ Unknown exit code: $code"
            exit 1
          fi

      - name: Check for Destroys
        run: |
          terraform show -json tfplan | jq -e '
            .resource_changes[]? | select(.change.actions | index("delete"))
          ' > deletions.json

          if [ -s deletions.json ]; then
            echo "🚨 Destroy actions detected! Refusing to apply."
            cat deletions.json
            exit 1
          else
            echo "✅ No delete actions detected."
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Get Bastion IP
        id: bastion
        run: |
          echo "BASTION_IP=$(terraform output -raw bastion_ip)" >> $GITHUB_ENV

      - name: Copy hosts.yaml to Bastion
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.BASTION_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: terraform/ansible/hosts.yaml
          target: /home/ubuntu/
