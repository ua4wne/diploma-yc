name: Terraform Apply with Yandex S3 Backend

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/src/k8s/**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform/src/k8s

    env:
      TF_VAR_token: ${{ secrets.YC_TOKEN }}
      TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
      TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
      TF_VAR_zone: ${{ secrets.YC_ZONE }}
      TF_VAR_get_hosts: "true"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init (with Yandex S3)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: |
          terraform init \
            -backend-config="bucket=s3-tf-backend" \
            -backend-config="key=diploma/terraform.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="endpoint=https://storage.yandexcloud.net" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_requesting_account_id=true" \
            -backend-config="skip_s3_checksum=true"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan -detailed-exitcode || echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Check Plan Exit Code
        run: |
          if [ "${{ steps.plan.outputs.exit_code }}" == "0" ]; then
            echo "No changes to apply."
            exit 0
          elif [ "${{ steps.plan.outputs.exit_code }}" == "1" ]; then
            echo "Terraform plan failed."
            exit 1
          elif [ "${{ steps.plan.outputs.exit_code }}" == "2" ]; then
            echo "Changes detected."
          else
            echo "Unknown exit code."
            exit 1
          fi

      - name: Check for Destroy in Plan
        run: |
          terraform show -json tfplan | jq -e '
            .resource_changes[]? | select(.change.actions | index("delete"))
          ' > deletions.json

          if [ -s deletions.json ]; then
            echo "ðŸš¨ Destroy actions detected! Refusing to apply."
            cat deletions.json
            exit 1
          else
            echo "âœ… No deletions. Safe to apply."
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
